//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18052
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18052 版自动生成。
// 
#pragma warning disable 1591

namespace BitAuto.CarChannel.Common.com.bitauto.news {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NewsServiceSoap", Namespace="http://tempuri.org/")]
    public partial class NewsService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AsyncNewsTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback AsyncNewsTitleAndUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDailyTopNewsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWeeklyTopNewsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMonthlyTopNewsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPeriodTimeTopNewsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SortNewsByCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SortTopNewsByCommentsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NewsService() {
            this.Url = global::BitAuto.CarChannel.Common.Properties.Settings.Default.Common_com_bitauto_news_NewsService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AsyncNewsTitleCompletedEventHandler AsyncNewsTitleCompleted;
        
        /// <remarks/>
        public event AsyncNewsTitleAndUrlCompletedEventHandler AsyncNewsTitleAndUrlCompleted;
        
        /// <remarks/>
        public event GetDailyTopNewsListCompletedEventHandler GetDailyTopNewsListCompleted;
        
        /// <remarks/>
        public event GetWeeklyTopNewsListCompletedEventHandler GetWeeklyTopNewsListCompleted;
        
        /// <remarks/>
        public event GetMonthlyTopNewsListCompletedEventHandler GetMonthlyTopNewsListCompleted;
        
        /// <remarks/>
        public event GetPeriodTimeTopNewsListCompletedEventHandler GetPeriodTimeTopNewsListCompleted;
        
        /// <remarks/>
        public event SortNewsByCommentsCompletedEventHandler SortNewsByCommentsCompleted;
        
        /// <remarks/>
        public event SortTopNewsByCommentsCompletedEventHandler SortTopNewsByCommentsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AsyncNewsTitle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AsyncNewsTitle(int newsID, string title, string seckey) {
            object[] results = this.Invoke("AsyncNewsTitle", new object[] {
                        newsID,
                        title,
                        seckey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AsyncNewsTitleAsync(int newsID, string title, string seckey) {
            this.AsyncNewsTitleAsync(newsID, title, seckey, null);
        }
        
        /// <remarks/>
        public void AsyncNewsTitleAsync(int newsID, string title, string seckey, object userState) {
            if ((this.AsyncNewsTitleOperationCompleted == null)) {
                this.AsyncNewsTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAsyncNewsTitleOperationCompleted);
            }
            this.InvokeAsync("AsyncNewsTitle", new object[] {
                        newsID,
                        title,
                        seckey}, this.AsyncNewsTitleOperationCompleted, userState);
        }
        
        private void OnAsyncNewsTitleOperationCompleted(object arg) {
            if ((this.AsyncNewsTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AsyncNewsTitleCompleted(this, new AsyncNewsTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AsyncNewsTitleAndUrl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AsyncNewsTitleAndUrl(int newsID, string title, string url, string seckey) {
            object[] results = this.Invoke("AsyncNewsTitleAndUrl", new object[] {
                        newsID,
                        title,
                        url,
                        seckey});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AsyncNewsTitleAndUrlAsync(int newsID, string title, string url, string seckey) {
            this.AsyncNewsTitleAndUrlAsync(newsID, title, url, seckey, null);
        }
        
        /// <remarks/>
        public void AsyncNewsTitleAndUrlAsync(int newsID, string title, string url, string seckey, object userState) {
            if ((this.AsyncNewsTitleAndUrlOperationCompleted == null)) {
                this.AsyncNewsTitleAndUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAsyncNewsTitleAndUrlOperationCompleted);
            }
            this.InvokeAsync("AsyncNewsTitleAndUrl", new object[] {
                        newsID,
                        title,
                        url,
                        seckey}, this.AsyncNewsTitleAndUrlOperationCompleted, userState);
        }
        
        private void OnAsyncNewsTitleAndUrlOperationCompleted(object arg) {
            if ((this.AsyncNewsTitleAndUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AsyncNewsTitleAndUrlCompleted(this, new AsyncNewsTitleAndUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDailyTopNewsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsReference[] GetDailyTopNewsList(System.DateTime day, int count) {
            object[] results = this.Invoke("GetDailyTopNewsList", new object[] {
                        day,
                        count});
            return ((NewsReference[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDailyTopNewsListAsync(System.DateTime day, int count) {
            this.GetDailyTopNewsListAsync(day, count, null);
        }
        
        /// <remarks/>
        public void GetDailyTopNewsListAsync(System.DateTime day, int count, object userState) {
            if ((this.GetDailyTopNewsListOperationCompleted == null)) {
                this.GetDailyTopNewsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDailyTopNewsListOperationCompleted);
            }
            this.InvokeAsync("GetDailyTopNewsList", new object[] {
                        day,
                        count}, this.GetDailyTopNewsListOperationCompleted, userState);
        }
        
        private void OnGetDailyTopNewsListOperationCompleted(object arg) {
            if ((this.GetDailyTopNewsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDailyTopNewsListCompleted(this, new GetDailyTopNewsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWeeklyTopNewsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsReference[] GetWeeklyTopNewsList(System.DateTime firstDayOfWeek, int count) {
            object[] results = this.Invoke("GetWeeklyTopNewsList", new object[] {
                        firstDayOfWeek,
                        count});
            return ((NewsReference[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWeeklyTopNewsListAsync(System.DateTime firstDayOfWeek, int count) {
            this.GetWeeklyTopNewsListAsync(firstDayOfWeek, count, null);
        }
        
        /// <remarks/>
        public void GetWeeklyTopNewsListAsync(System.DateTime firstDayOfWeek, int count, object userState) {
            if ((this.GetWeeklyTopNewsListOperationCompleted == null)) {
                this.GetWeeklyTopNewsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWeeklyTopNewsListOperationCompleted);
            }
            this.InvokeAsync("GetWeeklyTopNewsList", new object[] {
                        firstDayOfWeek,
                        count}, this.GetWeeklyTopNewsListOperationCompleted, userState);
        }
        
        private void OnGetWeeklyTopNewsListOperationCompleted(object arg) {
            if ((this.GetWeeklyTopNewsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWeeklyTopNewsListCompleted(this, new GetWeeklyTopNewsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMonthlyTopNewsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsReference[] GetMonthlyTopNewsList(System.DateTime firstDayOfMonth, int count) {
            object[] results = this.Invoke("GetMonthlyTopNewsList", new object[] {
                        firstDayOfMonth,
                        count});
            return ((NewsReference[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMonthlyTopNewsListAsync(System.DateTime firstDayOfMonth, int count) {
            this.GetMonthlyTopNewsListAsync(firstDayOfMonth, count, null);
        }
        
        /// <remarks/>
        public void GetMonthlyTopNewsListAsync(System.DateTime firstDayOfMonth, int count, object userState) {
            if ((this.GetMonthlyTopNewsListOperationCompleted == null)) {
                this.GetMonthlyTopNewsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMonthlyTopNewsListOperationCompleted);
            }
            this.InvokeAsync("GetMonthlyTopNewsList", new object[] {
                        firstDayOfMonth,
                        count}, this.GetMonthlyTopNewsListOperationCompleted, userState);
        }
        
        private void OnGetMonthlyTopNewsListOperationCompleted(object arg) {
            if ((this.GetMonthlyTopNewsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMonthlyTopNewsListCompleted(this, new GetMonthlyTopNewsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPeriodTimeTopNewsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsReference[] GetPeriodTimeTopNewsList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> fromDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> toDate, int count) {
            object[] results = this.Invoke("GetPeriodTimeTopNewsList", new object[] {
                        fromDate,
                        toDate,
                        count});
            return ((NewsReference[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPeriodTimeTopNewsListAsync(System.Nullable<System.DateTime> fromDate, System.Nullable<System.DateTime> toDate, int count) {
            this.GetPeriodTimeTopNewsListAsync(fromDate, toDate, count, null);
        }
        
        /// <remarks/>
        public void GetPeriodTimeTopNewsListAsync(System.Nullable<System.DateTime> fromDate, System.Nullable<System.DateTime> toDate, int count, object userState) {
            if ((this.GetPeriodTimeTopNewsListOperationCompleted == null)) {
                this.GetPeriodTimeTopNewsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPeriodTimeTopNewsListOperationCompleted);
            }
            this.InvokeAsync("GetPeriodTimeTopNewsList", new object[] {
                        fromDate,
                        toDate,
                        count}, this.GetPeriodTimeTopNewsListOperationCompleted, userState);
        }
        
        private void OnGetPeriodTimeTopNewsListOperationCompleted(object arg) {
            if ((this.GetPeriodTimeTopNewsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPeriodTimeTopNewsListCompleted(this, new GetPeriodTimeTopNewsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SortNewsByComments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsReference[] SortNewsByComments(int[] newsIDs) {
            object[] results = this.Invoke("SortNewsByComments", new object[] {
                        newsIDs});
            return ((NewsReference[])(results[0]));
        }
        
        /// <remarks/>
        public void SortNewsByCommentsAsync(int[] newsIDs) {
            this.SortNewsByCommentsAsync(newsIDs, null);
        }
        
        /// <remarks/>
        public void SortNewsByCommentsAsync(int[] newsIDs, object userState) {
            if ((this.SortNewsByCommentsOperationCompleted == null)) {
                this.SortNewsByCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSortNewsByCommentsOperationCompleted);
            }
            this.InvokeAsync("SortNewsByComments", new object[] {
                        newsIDs}, this.SortNewsByCommentsOperationCompleted, userState);
        }
        
        private void OnSortNewsByCommentsOperationCompleted(object arg) {
            if ((this.SortNewsByCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SortNewsByCommentsCompleted(this, new SortNewsByCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SortTopNewsByComments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public NewsReference[] SortTopNewsByComments(int count, int[] newsIDs) {
            object[] results = this.Invoke("SortTopNewsByComments", new object[] {
                        count,
                        newsIDs});
            return ((NewsReference[])(results[0]));
        }
        
        /// <remarks/>
        public void SortTopNewsByCommentsAsync(int count, int[] newsIDs) {
            this.SortTopNewsByCommentsAsync(count, newsIDs, null);
        }
        
        /// <remarks/>
        public void SortTopNewsByCommentsAsync(int count, int[] newsIDs, object userState) {
            if ((this.SortTopNewsByCommentsOperationCompleted == null)) {
                this.SortTopNewsByCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSortTopNewsByCommentsOperationCompleted);
            }
            this.InvokeAsync("SortTopNewsByComments", new object[] {
                        count,
                        newsIDs}, this.SortTopNewsByCommentsOperationCompleted, userState);
        }
        
        private void OnSortTopNewsByCommentsOperationCompleted(object arg) {
            if ((this.SortTopNewsByCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SortTopNewsByCommentsCompleted(this, new SortTopNewsByCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class NewsReference {
        
        private int idField;
        
        private string urlField;
        
        private string titleField;
        
        private int commentCountField;
        
        private int partitionIDField;
        
        private int posterCountField;
        
        private System.DateTime createDateField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int CommentCount {
            get {
                return this.commentCountField;
            }
            set {
                this.commentCountField = value;
            }
        }
        
        /// <remarks/>
        public int PartitionID {
            get {
                return this.partitionIDField;
            }
            set {
                this.partitionIDField = value;
            }
        }
        
        /// <remarks/>
        public int PosterCount {
            get {
                return this.posterCountField;
            }
            set {
                this.posterCountField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AsyncNewsTitleCompletedEventHandler(object sender, AsyncNewsTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AsyncNewsTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AsyncNewsTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AsyncNewsTitleAndUrlCompletedEventHandler(object sender, AsyncNewsTitleAndUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AsyncNewsTitleAndUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AsyncNewsTitleAndUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDailyTopNewsListCompletedEventHandler(object sender, GetDailyTopNewsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDailyTopNewsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDailyTopNewsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsReference[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsReference[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetWeeklyTopNewsListCompletedEventHandler(object sender, GetWeeklyTopNewsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWeeklyTopNewsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWeeklyTopNewsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsReference[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsReference[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetMonthlyTopNewsListCompletedEventHandler(object sender, GetMonthlyTopNewsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMonthlyTopNewsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMonthlyTopNewsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsReference[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsReference[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetPeriodTimeTopNewsListCompletedEventHandler(object sender, GetPeriodTimeTopNewsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPeriodTimeTopNewsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPeriodTimeTopNewsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsReference[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsReference[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SortNewsByCommentsCompletedEventHandler(object sender, SortNewsByCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SortNewsByCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SortNewsByCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsReference[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsReference[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SortTopNewsByCommentsCompletedEventHandler(object sender, SortTopNewsByCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SortTopNewsByCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SortTopNewsByCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NewsReference[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NewsReference[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591