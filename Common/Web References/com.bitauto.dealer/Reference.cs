//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18052
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18052 版自动生成。
// 
#pragma warning disable 1591

namespace BitAuto.CarChannel.Common.com.bitauto.dealer {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="VendorSearchSoap", Namespace="http://tempuri.org/")]
    public partial class VendorSearch : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetVendorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorNewsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorListCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorListGroupByProvinceIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorListGroupByCityIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorListGroupByBizModeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public VendorSearch() {
            this.Url = global::BitAuto.CarChannel.Common.Properties.Settings.Default.Common_com_bitauto_dealer_VendorSearch;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetVendorListCompletedEventHandler GetVendorListCompleted;
        
        /// <remarks/>
        public event GetVendorNewsListCompletedEventHandler GetVendorNewsListCompleted;
        
        /// <remarks/>
        public event GetVendorListCountCompletedEventHandler GetVendorListCountCompleted;
        
        /// <remarks/>
        public event GetVendorListGroupByProvinceIDCompletedEventHandler GetVendorListGroupByProvinceIDCompleted;
        
        /// <remarks/>
        public event GetVendorListGroupByCityIDCompletedEventHandler GetVendorListGroupByCityIDCompleted;
        
        /// <remarks/>
        public event GetVendorListGroupByBizModeCompletedEventHandler GetVendorListGroupByBizModeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVendorList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVendorList(int BrandID, int SeriesID, int CarID, int ProvinceID, int CityID, int vendorBizMode, int PageSize, int pageIndex, string ProductName) {
            object[] results = this.Invoke("GetVendorList", new object[] {
                        BrandID,
                        SeriesID,
                        CarID,
                        ProvinceID,
                        CityID,
                        vendorBizMode,
                        PageSize,
                        pageIndex,
                        ProductName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorListAsync(int BrandID, int SeriesID, int CarID, int ProvinceID, int CityID, int vendorBizMode, int PageSize, int pageIndex, string ProductName) {
            this.GetVendorListAsync(BrandID, SeriesID, CarID, ProvinceID, CityID, vendorBizMode, PageSize, pageIndex, ProductName, null);
        }
        
        /// <remarks/>
        public void GetVendorListAsync(int BrandID, int SeriesID, int CarID, int ProvinceID, int CityID, int vendorBizMode, int PageSize, int pageIndex, string ProductName, object userState) {
            if ((this.GetVendorListOperationCompleted == null)) {
                this.GetVendorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorListOperationCompleted);
            }
            this.InvokeAsync("GetVendorList", new object[] {
                        BrandID,
                        SeriesID,
                        CarID,
                        ProvinceID,
                        CityID,
                        vendorBizMode,
                        PageSize,
                        pageIndex,
                        ProductName}, this.GetVendorListOperationCompleted, userState);
        }
        
        private void OnGetVendorListOperationCompleted(object arg) {
            if ((this.GetVendorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorListCompleted(this, new GetVendorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVendorNewsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVendorNewsList(int SeriesID, int ProvinceID, int CityID, int RowCount, string ProductName) {
            object[] results = this.Invoke("GetVendorNewsList", new object[] {
                        SeriesID,
                        ProvinceID,
                        CityID,
                        RowCount,
                        ProductName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorNewsListAsync(int SeriesID, int ProvinceID, int CityID, int RowCount, string ProductName) {
            this.GetVendorNewsListAsync(SeriesID, ProvinceID, CityID, RowCount, ProductName, null);
        }
        
        /// <remarks/>
        public void GetVendorNewsListAsync(int SeriesID, int ProvinceID, int CityID, int RowCount, string ProductName, object userState) {
            if ((this.GetVendorNewsListOperationCompleted == null)) {
                this.GetVendorNewsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorNewsListOperationCompleted);
            }
            this.InvokeAsync("GetVendorNewsList", new object[] {
                        SeriesID,
                        ProvinceID,
                        CityID,
                        RowCount,
                        ProductName}, this.GetVendorNewsListOperationCompleted, userState);
        }
        
        private void OnGetVendorNewsListOperationCompleted(object arg) {
            if ((this.GetVendorNewsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorNewsListCompleted(this, new GetVendorNewsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVendorListCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetVendorListCount(int BrandID, int SeriesID, int CarID, int ProvinceID, int CityID, int vendorBizMode, string ProductName) {
            object[] results = this.Invoke("GetVendorListCount", new object[] {
                        BrandID,
                        SeriesID,
                        CarID,
                        ProvinceID,
                        CityID,
                        vendorBizMode,
                        ProductName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorListCountAsync(int BrandID, int SeriesID, int CarID, int ProvinceID, int CityID, int vendorBizMode, string ProductName) {
            this.GetVendorListCountAsync(BrandID, SeriesID, CarID, ProvinceID, CityID, vendorBizMode, ProductName, null);
        }
        
        /// <remarks/>
        public void GetVendorListCountAsync(int BrandID, int SeriesID, int CarID, int ProvinceID, int CityID, int vendorBizMode, string ProductName, object userState) {
            if ((this.GetVendorListCountOperationCompleted == null)) {
                this.GetVendorListCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorListCountOperationCompleted);
            }
            this.InvokeAsync("GetVendorListCount", new object[] {
                        BrandID,
                        SeriesID,
                        CarID,
                        ProvinceID,
                        CityID,
                        vendorBizMode,
                        ProductName}, this.GetVendorListCountOperationCompleted, userState);
        }
        
        private void OnGetVendorListCountOperationCompleted(object arg) {
            if ((this.GetVendorListCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorListCountCompleted(this, new GetVendorListCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVendorListGroupByProvinceID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVendorListGroupByProvinceID(int BrandID, int SeriesID, int CarID, int ProvinceID, int CityID, int vendorBizMode, string ProductName) {
            object[] results = this.Invoke("GetVendorListGroupByProvinceID", new object[] {
                        BrandID,
                        SeriesID,
                        CarID,
                        ProvinceID,
                        CityID,
                        vendorBizMode,
                        ProductName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorListGroupByProvinceIDAsync(int BrandID, int SeriesID, int CarID, int ProvinceID, int CityID, int vendorBizMode, string ProductName) {
            this.GetVendorListGroupByProvinceIDAsync(BrandID, SeriesID, CarID, ProvinceID, CityID, vendorBizMode, ProductName, null);
        }
        
        /// <remarks/>
        public void GetVendorListGroupByProvinceIDAsync(int BrandID, int SeriesID, int CarID, int ProvinceID, int CityID, int vendorBizMode, string ProductName, object userState) {
            if ((this.GetVendorListGroupByProvinceIDOperationCompleted == null)) {
                this.GetVendorListGroupByProvinceIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorListGroupByProvinceIDOperationCompleted);
            }
            this.InvokeAsync("GetVendorListGroupByProvinceID", new object[] {
                        BrandID,
                        SeriesID,
                        CarID,
                        ProvinceID,
                        CityID,
                        vendorBizMode,
                        ProductName}, this.GetVendorListGroupByProvinceIDOperationCompleted, userState);
        }
        
        private void OnGetVendorListGroupByProvinceIDOperationCompleted(object arg) {
            if ((this.GetVendorListGroupByProvinceIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorListGroupByProvinceIDCompleted(this, new GetVendorListGroupByProvinceIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVendorListGroupByCityID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVendorListGroupByCityID(int BrandID, int SeriesID, int CarID, int ProvinceID, int CityID, int vendorBizMode, string ProductName) {
            object[] results = this.Invoke("GetVendorListGroupByCityID", new object[] {
                        BrandID,
                        SeriesID,
                        CarID,
                        ProvinceID,
                        CityID,
                        vendorBizMode,
                        ProductName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorListGroupByCityIDAsync(int BrandID, int SeriesID, int CarID, int ProvinceID, int CityID, int vendorBizMode, string ProductName) {
            this.GetVendorListGroupByCityIDAsync(BrandID, SeriesID, CarID, ProvinceID, CityID, vendorBizMode, ProductName, null);
        }
        
        /// <remarks/>
        public void GetVendorListGroupByCityIDAsync(int BrandID, int SeriesID, int CarID, int ProvinceID, int CityID, int vendorBizMode, string ProductName, object userState) {
            if ((this.GetVendorListGroupByCityIDOperationCompleted == null)) {
                this.GetVendorListGroupByCityIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorListGroupByCityIDOperationCompleted);
            }
            this.InvokeAsync("GetVendorListGroupByCityID", new object[] {
                        BrandID,
                        SeriesID,
                        CarID,
                        ProvinceID,
                        CityID,
                        vendorBizMode,
                        ProductName}, this.GetVendorListGroupByCityIDOperationCompleted, userState);
        }
        
        private void OnGetVendorListGroupByCityIDOperationCompleted(object arg) {
            if ((this.GetVendorListGroupByCityIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorListGroupByCityIDCompleted(this, new GetVendorListGroupByCityIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVendorListGroupByBizMode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVendorListGroupByBizMode(int BrandID, int SeriesID, int CarID, int ProvinceID, int CityID, int vendorBizMode, string ProductName) {
            object[] results = this.Invoke("GetVendorListGroupByBizMode", new object[] {
                        BrandID,
                        SeriesID,
                        CarID,
                        ProvinceID,
                        CityID,
                        vendorBizMode,
                        ProductName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorListGroupByBizModeAsync(int BrandID, int SeriesID, int CarID, int ProvinceID, int CityID, int vendorBizMode, string ProductName) {
            this.GetVendorListGroupByBizModeAsync(BrandID, SeriesID, CarID, ProvinceID, CityID, vendorBizMode, ProductName, null);
        }
        
        /// <remarks/>
        public void GetVendorListGroupByBizModeAsync(int BrandID, int SeriesID, int CarID, int ProvinceID, int CityID, int vendorBizMode, string ProductName, object userState) {
            if ((this.GetVendorListGroupByBizModeOperationCompleted == null)) {
                this.GetVendorListGroupByBizModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorListGroupByBizModeOperationCompleted);
            }
            this.InvokeAsync("GetVendorListGroupByBizMode", new object[] {
                        BrandID,
                        SeriesID,
                        CarID,
                        ProvinceID,
                        CityID,
                        vendorBizMode,
                        ProductName}, this.GetVendorListGroupByBizModeOperationCompleted, userState);
        }
        
        private void OnGetVendorListGroupByBizModeOperationCompleted(object arg) {
            if ((this.GetVendorListGroupByBizModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorListGroupByBizModeCompleted(this, new GetVendorListGroupByBizModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetVendorListCompletedEventHandler(object sender, GetVendorListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetVendorNewsListCompletedEventHandler(object sender, GetVendorNewsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorNewsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorNewsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetVendorListCountCompletedEventHandler(object sender, GetVendorListCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorListCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorListCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetVendorListGroupByProvinceIDCompletedEventHandler(object sender, GetVendorListGroupByProvinceIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorListGroupByProvinceIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorListGroupByProvinceIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetVendorListGroupByCityIDCompletedEventHandler(object sender, GetVendorListGroupByCityIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorListGroupByCityIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorListGroupByCityIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetVendorListGroupByBizModeCompletedEventHandler(object sender, GetVendorListGroupByBizModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorListGroupByBizModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorListGroupByBizModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591